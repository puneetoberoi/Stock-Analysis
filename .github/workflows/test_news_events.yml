name: Test News/Events Engine

on:
  workflow_dispatch:  # Manual trigger only

permissions:
  contents: read

jobs:
  test-news-engine:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pandas yfinance
    
    - name: ðŸ§ª Test News/Events Engine
      env:
        FINNHUB_API_KEY: ${{ secrets.FINNHUB_API_KEY }}
        ALPHA_VANTAGE_KEY: ${{ secrets.ALPHA_VANTAGE_KEY }}
      run: |
        echo "Testing News/Events Engine..."
        python src/analysis/news_events_engine.py
        
    - name: ðŸ“Š Test with Multiple Tickers
      env:
        FINNHUB_API_KEY: ${{ secrets.FINNHUB_API_KEY }}
      run: |
        python -c "
        from src.analysis.news_events_engine import NewsEventsEngine
        
        engine = NewsEventsEngine()
        tickers = ['NVDA', 'AAPL', 'TSLA', 'MSFT']
        
        print('\n' + '='*80)
        print('ðŸ“° TESTING NEWS/EVENTS ENGINE')
        print('='*80 + '\n')
        
        for ticker in tickers:
            try:
                result = engine.analyze_events(ticker, days_back=7)
                
                print(f'{ticker}:')
                print(f'  Events: {result[\"event_count\"]}')
                print(f'  Score: {result[\"total_score\"]:+d}')
                print(f'  Sentiment: {result[\"sentiment\"]}')
                
                if result.get('events'):
                    for event in result['events'][:3]:  # Show top 3
                        print(f'    {event[\"emoji\"]} {event[\"description\"]}')
                print()
                
            except Exception as e:
                print(f'{ticker}: Error - {e}')
        
        print('='*80)
        "
