name: Test Evening Email

on:
  workflow_dispatch:

jobs:
  evening-email:
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout
        uses: actions/checkout@v3
      
      - name: üêç Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            # ‚úÖ FIXED: All packages in one block, including groq and cohere
            pip install ddgs scipy
            pip install pandas ta yfinance requests numpy aiohttp beautifulsoup4 lxml matplotlib seaborn pytrends requests-html nest_asyncio spacy textblob transformers wikipedia-api markdown vaderSentiment asyncio-throttle python-dateutil PyYAML google-generativeai groq cohere ddgs
        
      - name: üîç Verify Data Exists
        run: |
          echo "=== Predictions File ==="
          if [ -f "data/predictions.json" ]; then
            echo "‚úÖ Found predictions.json"
            python -c "import json; data=json.load(open('data/predictions.json')); print(f'Total predictions: {len(data)}'); checked=[p for p in data.values() if p.get(\"was_correct\") is not None]; print(f'Already checked: {len(checked)}'); unchecked=[p for p in data.values() if p.get(\"was_correct\") is None]; print(f'Unchecked: {len(unchecked)}')"
          else
            echo "‚ùå No predictions.json found"
            exit 1
          fi
      
      - name: üåô Run Evening Checker (Production Mode)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
        run: |
          cd src
          python check_outcomes.py
      
      - name: üìä Show Results
        if: always()
        run: |
          echo "=== Pattern Combinations Created? ==="
          if [ -f "data/pattern_combinations.json" ]; then
            echo "‚úÖ Contextual learning file created!"
            cat data/pattern_combinations.json | python -m json.tool | head -30
          else
            echo "‚ö†Ô∏è Not created (no new predictions checked)"
          fi
